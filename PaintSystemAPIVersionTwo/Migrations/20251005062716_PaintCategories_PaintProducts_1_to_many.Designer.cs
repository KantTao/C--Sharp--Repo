// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaintSystemAPIVersionOne.Data;

#nullable disable

namespace PaintSystemAPIVersionOne.Migrations
{
    [DbContext(typeof(PaintDbContext))]
    [Migration("20251005062716_PaintCategories_PaintProducts_1_to_many")]
    partial class PaintCategories_PaintProducts_1_to_many
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderReference")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OrderTable");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.PaintBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("PaintBrandTable");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.PaintCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PaintCategoryTable");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.PaintProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BaseType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GlossLevel")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PaintBrandId")
                        .HasColumnType("int");

                    b.Property<int>("PaintCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("PaintSeriesId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerLitre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaintBrandId");

                    b.HasIndex("PaintCategoryId");

                    b.HasIndex("PaintSeriesId");

                    b.ToTable("PaintProductTable");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.PaintSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PaintBrandId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaintBrandId");

                    b.ToTable("PaintSeriesTable");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuluxAccountInfo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("UserTable");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.Order", b =>
                {
                    b.HasOne("PaintSystemAPIVersionOne.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.PaintProduct", b =>
                {
                    b.HasOne("PaintSystemAPIVersionOne.Model.PaintBrand", "PaintBrand")
                        .WithMany("PaintProductList")
                        .HasForeignKey("PaintBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaintSystemAPIVersionOne.Model.PaintCategories", "PaintCategories")
                        .WithMany("PaintProducts")
                        .HasForeignKey("PaintCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PaintSystemAPIVersionOne.Model.PaintSeries", "PaintSeries")
                        .WithMany("PaintProducts")
                        .HasForeignKey("PaintSeriesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PaintBrand");

                    b.Navigation("PaintCategories");

                    b.Navigation("PaintSeries");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.PaintSeries", b =>
                {
                    b.HasOne("PaintSystemAPIVersionOne.Model.PaintBrand", "PaintBrand")
                        .WithMany("PaintSeriesList")
                        .HasForeignKey("PaintBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaintBrand");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.PaintBrand", b =>
                {
                    b.Navigation("PaintProductList");

                    b.Navigation("PaintSeriesList");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.PaintCategories", b =>
                {
                    b.Navigation("PaintProducts");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.PaintSeries", b =>
                {
                    b.Navigation("PaintProducts");
                });

            modelBuilder.Entity("PaintSystemAPIVersionOne.Model.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
